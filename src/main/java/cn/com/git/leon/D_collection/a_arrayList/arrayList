1、底层实现
底层是数组Object[] elementData
默认容量10
size

构造有三种
//初始化大小为0的数组
public ArrayList() {
    this.elementData = {};
}
//初始化大小为n的数组
public ArrayList(int n) {
    new Object[n]
}
//调用c的toArray赋值给elementData，非Object[]则elementData = Arrays.copyOf
public ArrayList(Collection c){
    elementData = c.toArray();
        if ((size = elementData.length) != 0) {
            // c.toArray might (incorrectly) not return Object[] (see 6260652)
            if (elementData.getClass() != Object[].class)
                elementData = Arrays.copyOf(elementData, size, Object[].class);
        }
    }
}

2、添加元素
add
    ensureCapacityInternal(size + 1)判断是否需要扩容
        先判断原数组elementData 是否为空，空则取 默认容量(10)和size+1中的最大值 否则返回size+1
        modCount++,如果上一句返回值大于数组长度elementData.length则扩容
    elementData[size++] = e;

3、扩容方式
grow(int minCapacity)
int oldCapacity = elementData.length;   旧数组长度
int newCapacity = oldCapacity + (oldCapacity >> 1);   新数组长度（扩容1.5倍）
newCapacity超过Integer.MAX_VALUE - 8时 (minCapacity > MAX_ARRAY_SIZE) ? Integer.MAX_VALUE : MAX_ARRAY_SIZE
(ArrayList最大长度Integer.MAX_VALUE - 8  )
数组作为一个对象，需要一定的内存存储对象头信息，对象头信息最大占用内存不可超过8字节。
elementData = Arrays.copyOf(elementData, newCapacity);

4、优缺点
查询速度快 直接根据下标索引 ，增加删除慢因为涉及到数组扩容移动

5、线程安全性
线程不安全

6、其它特性
有序:插入顺序
可以重复，可以插入null