1.直接使用双引号创建字符串String str = "a";
判断这个常量是否存在于常量池，
  如果存在，
   判断这个常量是存在的引用还是常量，
    如果是引用，返回引用地址指向的堆空间对象，
    如果是常量，则直接返回常量池常量，
  如果不存在，
    在常量池中创建该常量，并返回此常量

2.new String创建字符串 String str = new String("b");
首先在堆上创建对象
然后判断常量池上是否存在字符串的字面量，
  如果不存在
   在常量池上创建常量
  如果存在
   不做任何操作

3.双引号相加 String str = "c1"+"c2";
判断相加后的常量在常量池上是否存在
  如果不存在
   则在常量池上创建相应的常量
  如果存在
   判断这个常量是存在的引用还是常量，
    如果是引用，返回引用地址指向的堆空间对象，
    如果是常量，则直接返回常量池常量，

4.两个new String相加 String str = new String("d1")+new String("d2");
 首先会创建这两个对象以及相加后的对象
 然后判断常量池中是否存在这两个对象的字面量常量
  如果存在
   不做任何操作
  如果不存在
   则在常量池上创建对应常量

5.双引号字符串与new String字符串 String str = "e1"+new String("e2");
首先创建两个对象，一个是new String的对象，一个是相加后的对象
 然后判断双引号常量与new String的字面量在常量池是否存在
  如果存在
   不做操作
  如果不存在
   则在常量池上创建对象的常量

String.intern()
 判断这个常量是否存在于常量池。
  如果存在
   判断存在内容是引用还是常量，
    如果是引用，
     返回引用地址指向堆空间对象，
    如果是常量，
     直接返回常量池常量
  如果不存在，
   将当前对象引用复制到常量池,并且返回的是当前对象的引用